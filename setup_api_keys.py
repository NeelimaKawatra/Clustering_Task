#!/usr/bin/env python3
"""
Setup script to help you configure API keys for Clustery.
This script will create a .env file with your API keys.
"""

import os
import sys

def create_env_file():
    """Create .env file with API keys."""
    
    print("üîë Clustery API Keys Setup")
    print("=" * 40)
    print("This script will help you set up your API keys.")
    print("You can get API keys from:")
    print("- OpenAI: https://platform.openai.com/api-keys")
    print("- Anthropic: https://console.anthropic.com/")
    print()
    
    # Get API keys from user
    openai_key = input("Enter your OpenAI API key (or press Enter to skip): ").strip()
    anthropic_key = input("Enter your Anthropic API key (or press Enter to skip): ").strip()
    
    # Create .env file content
    env_content = f"""# LLM API Configuration
# Generated by setup_api_keys.py

# OpenAI API Key (for GPT models)
OPENAI_API_KEY={openai_key if openai_key else 'your_openai_api_key_here'}

# Anthropic API Key (for Claude models)  
ANTHROPIC_API_KEY={anthropic_key if anthropic_key else 'your_anthropic_api_key_here'}

# Optional: Default model preferences
DEFAULT_OPENAI_MODEL=gpt-4o-mini
DEFAULT_ANTHROPIC_MODEL=claude-3-5-sonnet-20241022
"""
    
    # Write .env file
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        
        print("\n‚úÖ .env file created successfully!")
        
        if openai_key:
            print(f"‚úÖ OpenAI API key set: {openai_key[:8]}...")
        else:
            print("‚ö†Ô∏è  OpenAI API key not set (you can add it later)")
            
        if anthropic_key:
            print(f"‚úÖ Anthropic API key set: {anthropic_key[:8]}...")
        else:
            print("‚ö†Ô∏è  Anthropic API key not set (you can add it later)")
        
        print("\nüöÄ Next steps:")
        print("1. Run: python test_llm_setup.py")
        print("2. Run: streamlit run main.py")
        
    except Exception as e:
        print(f"‚ùå Error creating .env file: {e}")
        return False
    
    return True

def main():
    """Main setup function."""
    if os.path.exists('.env'):
        overwrite = input("‚ö†Ô∏è  .env file already exists. Overwrite? (y/N): ").strip().lower()
        if overwrite != 'y':
            print("Setup cancelled.")
            return
    
    success = create_env_file()
    if success:
        print("\nüéâ Setup complete!")
    else:
        print("\n‚ùå Setup failed. Please try again.")

if __name__ == "__main__":
    main()
